df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from BIRTH_WEIGHTS"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
library("dplyr", lib.loc="~/R/win-library/3.1")
library("jsonlite", lib.loc="~/R/win-library/3.1")
library("tidyr", lib.loc="~/R/win-library/3.1")
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from BIRTH_WEIGHTS"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
library("devtools", lib.loc="~/R/win-library/3.1")
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from BIRTH_WEIGHTS"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
library("RCurl", lib.loc="~/R/win-library/3.1")
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from BIRTH_WEIGHTS"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
df
head(df)
tail(df)
library("dplyr", lib.loc="~/R/win-library/3.1")
library("ggplot2", lib.loc="~/R/win-library/3.1")
library("jsonlite", lib.loc="~/R/win-library/3.1")
library("RCurl", lib.loc="~/R/win-library/3.1")
library("tidyr", lib.loc="~/R/win-library/3.1")
age_grouping <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT ba.year, ba.zip_code, ba.age AS predominant_age_group, foo.high_count AS count, ba.city, ba.state, ba.latitude, ba.longitue AS longitude, ba.location FROM (SELECT year, zip_code, max(count) AS high_count FROM births_by_age GROUP BY year, zip_code) foo JOIN births_by_age ba ON foo.year = ba.year AND foo.zip_code = ba.zip_code AND foo.high_count = ba.count"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
age_grouping
race_vs_age <- race_vs_age %>% filter(AGE != "UNK", AGE != "UKN", TOTAL != "null") %>% ggplot(race_vs_age, aes(x = predominant_race, y =predominant_age)) + geomline() + ggtitle(‘Race vs Age’) + theme(plot.title = element_text(size=10, face= “bold”, vjust = 2)
race_vs_age <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT r.predominant_race, a.age, SUM(a.count) AS total FROM births_by_age a JOIN race_grouping r ON a.year = r.year AND a.zip_code = r.zip_code GROUP BY r.predominant_race, a.age"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
race_vs_age <- race_vs_age %>% filter(AGE != "UNK", AGE != "UKN", TOTAL != "null") %>% ggplot(race_vs_age, aes(x = predominant_race, y =predominant_age)) + geomline() + ggtitle(‘Race vs Age’) + theme(plot.title = element_text(size=10, face= “bold”, vjust = 2)
race_vs_age
age_vs_weights&LOCATION.y <- NULL
age_vs_weights&LOCATION.x <- NULL
age_vs_weights&ZIP_CODE.y <- NULL
age_vs_weights&ZIP_CODE.x <- NULL
age_vs_weights&STATE.y <- NULL
age_vs_weights$STATE.x <- NULL
age_vs_weights&CITY.y <- NULL
age_vs_weights&CITY.x <- NULL
age_vs_weights&LONGITUTE <- NULL
age_vs_weights <- age %>% filter(PREDOMINANT_AGE_GROUP != "UNK") %>% inner_join(b_weights, by = "LATITUDE", "LONGITUDE") %>% filter(BIRTHWEIGHT != "UNK")
age_vs_weights <- age %>% filter(PREDOMINANT_AGE_GROUP != "UNK") %>% inner_join(b_weights, by = "LATITUDE", "LONGITUDE") %>% filter(BIRTHWEIGHT != "UNK")
b_race_age %>% ggplot(aes(x=age_grouping, y = ZIP_Code, color = as.factor()
qeix
exit
b_race_age %>% ggplot(aes(x=age_grouping, y = ZIP_Code, color = as.factor()
exit
b_race_age %>% ggplot(aes(x=age_grouping, y = ZIP_Code, color = as.factor())
exit
b_race_age %>% ggplot(aes(x=age_grouping, y = ZIP_Code, color = as.factor()))
b_weights <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from birth_weights"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
head(b_weights)
b_race <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from birth_race"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
head(b_racE)
head(b_race)
b_age <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from births_by_age"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
head(b_age)
race_vs_age <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT br.year, br.zip_code, br.race AS predominant_race, foo.high_count AS race_count, br.city, br.state, br.latitude, br.longitude, br.location FROM (SELECT year, zip_code, max(race_count) AS high_count FROM birth_race GROUP BY year, zip_code) foo JOIN birth_race br ON foo.year = br.year AND foo.zip_code = br.zip_code AND foo.high_count = br.race_count"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
head_vs_age
race_vs_age
age_vs_weight <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT ba.year, ba.zip_code, ba.age AS predominant_age_group, foo.high_count AS count, ba.city, ba.state, ba.latitude, ba.longitue AS longitude, ba.location FROM (SELECT year, zip_code, max(count) AS high_count FROM births_by_age GROUP BY year, zip_code) foo JOIN births_by_age ba ON foo.year = ba.year AND foo.zip_code = ba.zip_code AND foo.high_count = ba.count"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
age_vs_weight
race_vs_weight
race_vs_age
age_vs_weight
race_vs_age <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT br.year, br.zip_code, br.race AS predominant_race, foo.high_count AS race_count, br.city, br.state, br.latitude, br.longitude, br.location FROM (SELECT year, zip_code, max(race_count) AS high_count FROM birth_race GROUP BY year, zip_code) foo JOIN birth_race br ON foo.year = br.year AND foo.zip_code = br.zip_code AND foo.high_count = br.race_count"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
race_vs_age
age_vs_weight <- age_vs_weight %>% filter(PREDOMINANT_AGE_GROUP != "UNK") %>% inner_join(b_weights, by = "LATITUDE", "LONGITUDE")
age_vs_weight
require("tidyr")
require("dplyr")
require("jsonlite")
require("RCurl")
b_weights <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from birth_weights"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
head(b_weights)
b_race <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from birth_race"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
head(b_race)
b_age <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from births_by_age"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
head(b_age)
race_vs_age <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT r.predominant_race, a.age, SUM(a.count) AS total FROM births_by_age a JOIN race_grouping r ON a.year = r.year AND a.zip_code = r.zip_code GROUP BY r.predominant_race, a.age"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
race_vs_age
age_vs_weight <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT ba.year, ba.zip_code, ba.age AS predominant_age_group, foo.high_count AS count, ba.city, ba.state, ba.latitude, ba.longitue AS longitude, ba.location FROM (SELECT year, zip_code, max(count) AS high_count FROM births_by_age GROUP BY year, zip_code) foo JOIN births_by_age ba ON foo.year = ba.year AND foo.zip_code = ba.zip_code AND foo.high_count = ba.count"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
age_vs_weight
head(age_vs_weight)
age_grouping <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT ba.year, ba.zip_code, ba.age AS predominant_age_group, foo.high_count AS count, ba.city, ba.state, ba.latitude, ba.longitue AS longitude, ba.location FROM (SELECT year, zip_code, max(count) AS high_count FROM births_by_age GROUP BY year, zip_code) foo JOIN births_by_age ba ON foo.year = ba.year AND foo.zip_code = ba.zip_code AND foo.high_count = ba.count"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
age_grouping
age_vs_weight <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT a.predominant_age_group, w.birthweight, SUM(w.count) AS total FROM age_grouping a JOIN birth_weights w ON a.year = w.year AND a.zip_code = w.zip_code GROUP BY a.predominant_age_group, w.birthweight"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
age_vs_weight
race_vs_weight <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT r.predominant_race, w.birthweight, SUM(w.count) AS total FROM race_grouping r JOIN birth_weights w ON r.year = w.year AND r.zip_code = w.zip_code GROUP BY r.predominant_race, w.birthweight"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
head(race_vs_weight)
race_vs_weight
race_grouping <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="SELECT br.year, br.zip_code, br.race AS predominant_race, foo.high_count AS race_count, br.city, br.state, br.latitude, br.longitude, br.location FROM (SELECT year, zip_code, max(race_count) AS high_count FROM birth_race GROUP BY year, zip_code) foo JOIN birth_race br ON foo.year = br.year AND foo.zip_code = br.zip_code AND foo.high_count = br.race_count"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
race_grouping
head(race_grouping)
race_vs_age <- filter(race_vs_age, AGE != "UNK", AGE != "UKN", TOTAL != "null")
race_vs_age$TOTAL <- as.character(race_vs_age$TOTAL)
race_vs_age$TOTAL[race_vs_age$TOTAL == "<NA>"] <- "0"
race_vs_age$TOTAL <- as.numeric(race_vs_age$TOTAL)
race_vs_age %>% spread(AGE, TOTAL) %>% melt(id.var="PREDOMINANT_RACE") %>% ggplot(aes(x = PREDOMINANT_RACE, y = value, fill = variable)) + geom_bar(stat = "identity")
require("reshape2")
race_vs_age <- filter(race_vs_age, AGE != "UNK", AGE != "UKN", TOTAL != "null")
race_vs_age$TOTAL <- as.character(race_vs_age$TOTAL)
race_vs_age$TOTAL[race_vs_age$TOTAL == "<NA>"] <- "0"
race_vs_age$TOTAL <- as.numeric(race_vs_age$TOTAL)
race_vs_age %>% spread(AGE, TOTAL) %>% melt(id.var="PREDOMINANT_RACE") %>% ggplot(aes(x = PREDOMINANT_RACE, y = value, fill = variable)) + geom_bar(stat = "identity")
require("ggplot2")
race_vs_age <- filter(race_vs_age, AGE != "UNK", AGE != "UKN", TOTAL != "null")
race_vs_age$TOTAL <- as.character(race_vs_age$TOTAL)
race_vs_age$TOTAL[race_vs_age$TOTAL == "<NA>"] <- "0"
race_vs_age$TOTAL <- as.numeric(race_vs_age$TOTAL)
race_vs_age %>% spread(AGE, TOTAL) %>% melt(id.var="PREDOMINANT_RACE") %>% ggplot(aes(x = PREDOMINANT_RACE, y = value, fill = variable)) + geom_bar(stat = "identity")
age_vs_weight <- age_grouping %>% filter(PREDOMINANT_AGE_GROUP != "UNK") %>% inner_join(b_weights, by = "LATITUDE", "LONGITUDE") %>% filter(BIRTHWEIGHT != “UNK”)
age_vs_weight <- age_grouping %>% filter(PREDOMINANT_AGE_GROUP != "UNK") %>% inner_join(b_weights, by = "LATITUDE", "LONGITUDE") %>% filter(BIRTHWEIGHT != "UNK")
age_vs_weight
head(age_vs_weight)
age_vs_weight$LOCATION.y <- NULL
age_vs_weight$LOCATION.x <- NULL
age_vs_weight$ZIP_CODE.x <- NULL
age_vs_weight$ZIP_CODE.y <- NULL
age_vs_weight$STATE.y <- NULL
age_vs_weight$STATE.x <- NULL
age_vs_weight$CITY.x <- NULL
age_vs_weight$CITY.y <- NULL
age_vs_weight$YEAR.x <- NULL
age_vs_weight$YEAR.y <- NULL
age_vs_weight$COUNT.y <- NULL
age_vs_weight$COUNT.x <- NULL
age_vs_weight$LONGITUDE <- NULL
age_vs_weight$LATITUDE <- NULL
age_vs_weight
head(age_vs_weight)
age_vs_weight$LONGITUTE <- NULL
head(age_vs_weight)
ggplot(age_vs_weight, aes(x=PREDOMINANT_AGE_GROUP, y =BIRTHWEIGHT, stat = "bin")) + geom_dotplot() + ggtitle("AGE vs. WEIGHT") + theme(plot.title = element_text(size=25, face = "italic", vjust = 1))
race_weights <- race_grouping %>% filter(PREDOMINANT_RACE != "UNK", PREDOMINANT_RACE != "UKN") %>% full_join(b_weights,by = "ZIP_CODE","YEAR") %>% filter(BIRTHWEIGHT != "UNK")
race_weights
head(race_weights)
race_weights <- race_grouping %>% filter(PREDOMINANT_RACE != "UNK", PREDOMINANT_RACE != "UKN") %>% full_join(b_weights,by = "ZIP_CODE","YEAR") %>% filter(BIRTHWEIGHT != "UNK") %>% select(YEAR.x,ZIP_CODE.x,PREDOMINANT_RACE,BIRTHWEIGHT,COUNT)
race_weights <- select(race_weights,c(YEAR.x,ZIP_CODE.x,PREDOMINANT_RACE,BIRTHWEIGHT,COUNT))
race_weights <- select(race_weights,c(YEAR,ZIP_CODE,PREDOMINANT_RACE,BIRTHWEIGHT,COUNT))
head(race_weights)
race_weights <- select(race_weights,c(x.YEAR,x.ZIP_CODE,PREDOMINANT_RACE,BIRTHWEIGHT,COUNT))
race_weights <- race_weights %>% select(YEAR,COUNT)
race_weights <- race_weights %>% select(COUNT)
race_weights
race_weights <- race_grouping %>% filter(PREDOMINANT_RACE != "UNK", PREDOMINANT_RACE != "UKN") %>% full_join(b_weights,by = "ZIP_CODE","YEAR") %>% filter(BIRTHWEIGHT != "UNK")
head(race_weights)
race_weights %>% race_weights %>% filter(is.na(COUNT))
race_weight <- race_weights %>% filter(is.na(COUNT))
race_weight
race_weight <- race_weights %>% filter(COUNT = "NULL")
race_weight <- race_weights %>% filter(COUNT = "null")
race_weight <- race_weights %>% filter(PREDOMINANT_RACE="HAWAIIAN  PAC.ISL")
head(race_weights)
race_weights %>% filter(PREDOMINANT_RACE="TWO+ RACES")
race_weights %>% distinct(COUNT)
race_weights %>% select(COUNT) %>% distinct(COUNT)
race_weights %>% select(COUNT) %>% distinct(COUNT) %>% ARRANGE(DESC(COUNT))
require("tidyr")
require("dplyr")
race_weights %>% select(COUNT) %>% distinct(COUNT) %>% ARRANGE(DESC(COUNT))
require("plyr")
race_weights %>% select(COUNT) %>% distinct(COUNT) %>% ARRANGE(DESC(COUNT))
race_weights %>% select(COUNT) %>% distinct(COUNT) %>% arrange(desc(COUNT))
race_Weights %>% filter(COUNT=0)
race_Weights
race_weights <- race_grouping %>% filter(PREDOMINANT_RACE != "UNK", PREDOMINANT_RACE != "UKN") %>% full_join(b_weights,by = "ZIP_CODE","YEAR") %>% filter(BIRTHWEIGHT != "UNK")
race_weights %>% filter(COUNT=0)
race_vs_age <- filter(race_vs_age, AGE != "UNK", AGE != "UKN", TOTAL != "null")
race_vs_age$TOTAL <- as.character(race_vs_age$TOTAL)
race_vs_age$TOTAL[race_vs_age$TOTAL == "<NA>"] <- "0"
race_vs_age$TOTAL <- as.numeric(race_vs_age$TOTAL)
race_vs_age %>% spread(AGE, TOTAL) %>% melt(id.var="PREDOMINANT_RACE") %>% ggplot(aes(x = PREDOMINANT_RACE, y = value, fill = variable)) + geom_bar(stat = "identity") + ggtitle("Number of Births by Race, Segmented by Age of Mother") + theme(axis.text.x=element_text(angle=50, size=20, vjust=0.5))
race_vs_age <- filter(race_vs_age, AGE != "UNK", AGE != "UKN", TOTAL != "null")
race_vs_age$TOTAL <- as.character(race_vs_age$TOTAL)
race_vs_age$TOTAL[race_vs_age$TOTAL == "<NA>"] <- "0"
race_vs_age$TOTAL <- as.numeric(race_vs_age$TOTAL)
race_vs_age %>% spread(AGE, TOTAL) %>% melt(id.var="PREDOMINANT_RACE") %>% ggplot(aes(x = PREDOMINANT_RACE, y = value, fill = variable)) + geom_bar(stat = "identity") + ggtitle("Number of Births by Race, Segmented by Age of Mother") + theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5))
race_vs_age <- filter(race_vs_age, AGE != "UNK", AGE != "UKN", TOTAL != "null")
race_vs_age$TOTAL <- as.character(race_vs_age$TOTAL)
race_vs_age$TOTAL[race_vs_age$TOTAL == "<NA>"] <- "0"
race_vs_age$TOTAL <- as.numeric(race_vs_age$TOTAL)
race_vs_age %>% spread(AGE, TOTAL) %>% melt(id.var="PREDOMINANT_RACE") %>% ggplot(aes(x = PREDOMINANT_RACE, y = value, fill = variable)) + geom_bar(stat = "identity") + ggtitle("Number of Births by Race, Segmented by Age of Mother") + theme(axis.text.x=element_text(angle=50, size=20, vjust=0.5)) + theme(plot.title = element_text(size=25, face = "bold", vjust = 2))
race_vs_age <- filter(race_vs_age, AGE != "UNK", AGE != "UKN", TOTAL != "null")
race_vs_age$TOTAL <- as.character(race_vs_age$TOTAL)
race_vs_age$TOTAL[race_vs_age$TOTAL == "<NA>"] <- "0"
race_vs_age$TOTAL <- as.numeric(race_vs_age$TOTAL)
race_vs_age %>% spread(AGE, TOTAL) %>% melt(id.var="PREDOMINANT_RACE") %>% ggplot(aes(x = PREDOMINANT_RACE, y = value, fill = variable)) + geom_bar(stat = "identity") + ggtitle("Number of Births by Race, Segmented by Age of Mother") + theme(axis.text.x=element_text(angle=50, size=20, vjust=0.5)) + theme(plot.title = element_text(size=20, face = "bold", vjust = 2))
race_vs_age <- filter(race_vs_age, AGE != "UNK", AGE != "UKN", TOTAL != "null")
race_vs_age$TOTAL <- as.character(race_vs_age$TOTAL)
race_vs_age$TOTAL[race_vs_age$TOTAL == "<NA>"] <- "0"
race_vs_age$TOTAL <- as.numeric(race_vs_age$TOTAL)
race_vs_age %>% spread(AGE, TOTAL) %>% melt(id.var="PREDOMINANT_RACE") %>% ggplot(aes(x = PREDOMINANT_RACE, y = value, fill = variable)) + geom_bar(stat = "identity") + ggtitle("Number of Births by Race, Segmented by Age of Mother") + theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) + theme(plot.title = element_text(size=20, face = "bold", vjust = 2))
race_weights %>% group_by(PREDOMINANT_RACE) %>% summarize(sum = sum(COUNT)) %>% select(PREDOMINANT_RACE,sum) %>% tbl_df
head(race_weights)
race_weights %>% group_by(PREDOMINANT_RACE) %>% summarize(sum = sum(COUNT))
detach("package:plyr", unload=TRUE)
race_weights %>% group_by(PREDOMINANT_RACE) %>% summarize(sum = sum(COUNT))
race_weights %>% group_by(PREDOMINANT_RACE,BIRTHWEIGHT) %>% summarize(sum = sum(COUNT))
race_group <- race_weights %>% group_by(PREDOMINANT_RACE,BIRTHWEIGHT) %>% summarize(sum = sum(COUNT))
race_group
race_group %>% filter(sum = 0)
race_group %>% ARRANGE(sum = 0)
race_group %>% arrange(sum)
race_weights
race_group <- race_weights %>% group_by(PREDOMINANT_RACE,BIRTHWEIGHT) %>% summarize(sum = sum(COUNT)) %>% filter(sum=0)
race_group <- race_weights %>% group_by(PREDOMINANT_RACE,BIRTHWEIGHT) %>% summarize(sum = sum(COUNT)) %>% ungroup() %>% filter(sum=0)
race_group <- race_weights %>% group_by(PREDOMINANT_RACE,BIRTHWEIGHT) %>% summarize(sum = sum(COUNT))
race_group
head(race_group)
race_weights <- race_grouping %>% filter(PREDOMINANT_RACE != "UNK", PREDOMINANT_RACE != "UKN") %>% full_join(b_weights,by = "ZIP_CODE","YEAR") %>% filter(BIRTHWEIGHT != "UNK")
race_group <- race_weights %>% group_by(PREDOMINANT_RACE,BIRTHWEIGHT) %>% summarize(sum = sum(COUNT)) %>% filter(sum=0)
race_group <- race_weights %>% group_by(PREDOMINANT_RACE,BIRTHWEIGHT) %>% summarize(sum = sum(COUNT)))
race_group <- race_weights %>% group_by(PREDOMINANT_RACE,BIRTHWEIGHT) %>% summarize(sum = sum(COUNT))
race_group
race_group <- race_weights %>% group_by(PREDOMINANT_RACE,BIRTHWEIGHT) %>% summarize(sum = sum(COUNT)) %>% filter(sum=0) %>% tbl_df
race_group <- race_weights %>% group_by(PREDOMINANT_RACE,BIRTHWEIGHT) %>% summarize(sum = sum(COUNT)) %>% tbl_df
race_group
race_group %>% filter(sum=0)
arrange(race_group,sum)
filter(race_group,sum=0)
race_group %>% filter(sum="0")
race_group %>% filter(sum='0')
race_group
ggplot(race_group, aes(x=PREDOMINANT_RACE, stat="bin")) + geom_histogram()
ggplot(race_group, aes(x=PREDOMINANT_RACE, y = sum, stat="bin")) + geom_histogram()
ggplot(race_group, aes(x=PREDOMINANT_RACE, y = sum, stat="identity")) + geom_histogram()
ggplot(race_group, aes(x=PREDOMINANT_RACE, stat="sum")) + geom_histogram()
ggplot(race_group, aes(x=PREDOMINANT_RACE, identity="sum", stat="identity")) + geom_histogram()
ggplot(race_group, aes(x=PREDOMINANT_RACE, identity="sum", stat="identity")) + geom_histogram()
ggplot(race_weights, aes(x=PREDOMINANT_RACE))+geom_histogram()
ggplot(race_weights, aes(x=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT)
ggplot(race_weights, aes(x=PREDOMINANT_RACE,color=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT)
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT)
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=1)) + theme(plot.title = element_text(size=20,face="bold",vjust=1))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=1)) + theme(plot.title = element_text(size=20,face="bold",vjust=1)) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=3)) + theme(plot.title = element_text(size=20,face="bold",vjust=1)) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=0.2)) + theme(plot.title = element_text(size=20,face="bold",vjust=1)) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1)) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(BIRTHWEIGHT~) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(BIRTHWEIGHT~.) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1)) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1)) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT~.) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1)) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT~.) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=5,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT~.) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=45,size=12,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT~.) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.y=element_text(size=4,face="bold"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=4,face="bold"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red")) + theme(panel.margin = unit(2, "lines"))
require("grid")
theme(panel.margin = unit(2, "lines"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red")) + theme(panel.margin = unit(2, "lines"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=2) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red")) + theme(panel.margin = unit(2, "lines"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=3) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red")) + theme(panel.margin = unit(2, "lines"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red")) + theme(panel.margin = unit(1, "lines"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red")) + theme(panel.margin = unit(0, "lines"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_wrap(~BIRTHWEIGHT,ncol=1,scales="free_y") + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red")) + theme(panel.margin = unit(0, "lines"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT ~ .) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red")) + theme(panel.margin = unit(1, "lines"))
race_weights <- factor(race_weights$BIRTHWEIGHT, levels=c("UNDER 1500g","1500-2499g","2500+ grams"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT ~ .) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red")) + theme(panel.margin = unit(1, "lines"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT ~ .) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red"))
race_weights
race_weights <- race_grouping %>% filter(PREDOMINANT_RACE != "UNK", PREDOMINANT_RACE != "UKN") %>% full_join(b_weights,by = "ZIP_CODE","YEAR") %>% filter(BIRTHWEIGHT != "UNK")
race_weights$BIRTHWEIGHT <- factor(race_weights$BIRTHWEIGHT, levels=c("UNDER 1500g","1500-2499g","2500+ grams"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT ~ .) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=12,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2)) + theme(strip.text.x=element_text(size=10,face="bold",colour="red"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT~.) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=10,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT~.) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=10,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))+theme(strip.text.x=element_text(size=10,face="bold",colour="red"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT~.) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=10,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))+theme(strip.text.x=element_text(size=10,face="bold",colour="red"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT~.) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=10,vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))+theme(strip.text.y=element_text(size=10,face="bold",colour="red"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT~.) + ggtitle("Distribution of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=10,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))+theme(strip.text.y=element_text(size=10,face="bold",colour="red"))
ggplot(race_weights, aes(x=PREDOMINANT_RACE,fill=PREDOMINANT_RACE))+geom_histogram()+facet_grid(BIRTHWEIGHT~.) + ggtitle("Dist. of Birth Weights by Predominant Race") + theme(axis.text.x=element_text(angle=90,size=10,face="bold",vjust=0.5)) + theme(plot.title = element_text(size=20,face="bold",vjust=1,hjust=4,colour="chocolate")) + theme(axis.text.y=element_text(size=10,face="bold",vjust=2))+theme(strip.text.y=element_text(size=10,face="bold",colour="red"))
q='Good'
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from diamonds where \\\"cut\\\" = \\\'"q"\\\'"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', q=q),verbose = TRUE)))
myplot <- function(df, x) {
names(df) <- c("x", "n")
ggplot(df, aes(x=x, y=n)) + geom_point()
}
categoricals <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select * from diamonds"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Diamonds', PASS='orcl', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))
ddf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from DIAMONDS"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON'),verbose = TRUE)))
l <- list()
for (i in names(ddf)) {
if (i %in% categoricals[[1]]) {
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from DIAMONDS group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i=i),verbose = TRUE)))
p <- myplot(r,i)
print(p)
l[[i]] <- p
}
}
png("/Users/pcannata/Mine/UT/GitRepositories/DataVisualization/RWorkshop/00 Doc/categoricals.png", width = 25, height = 10, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:4))
print(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 5:8))
print(l[[3]], vp = viewport(layout.pos.row = 1, layout.pos.col = 9:12))
dev.off()
png("/Users/pcannata/Mine/UT/GitRepositories/DataVisualization/RWorkshop/00 Doc/categoricals.png", width = 25, height = 10, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:4))
print(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 5:8))
print(l[[3]], vp = viewport(layout.pos.row = 1, layout.pos.col = 9:12))
png("/03 Visualizations/categorical.png", width = 25, height = 10, units = "in", res = 72)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
require("tidyr")
require("dplyr")
require("jsonlite")
categoricals <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select * from age_grouping"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Diamonds', PASS='orcl', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))
categoricals <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select * from age_grouping"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))
categoricals <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select * from age_grouping"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))
categoricals <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select * from age_grouping"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))
categorical
categoricals
ddf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from age_grouping"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL',USER='C##cs329e_hhz76',PASS='orcl_hhz76',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON'),verbose = TRUE)));
ddf
l <- list()
for (i in names(ddf)) {
if (i %in% categoricals[[1]]) {
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from DIAMONDS group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i = i),verbose = TRUE)))
p <- myplot(r,i)
print(p)
l[[i]] <- p
}
}
png("/03 Visualizations/categorical.png", width = 25, height = 10, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:4))
print(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 5:8))
print(l[[3]], vp = viewport(layout.pos.row = 1, layout.pos.col = 9:12))
dev.off()
l <- list()
for (i in names(ddf)) {
if (i %in% categoricals[[1]]) {
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from DIAMONDS group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i = i),verbose = TRUE)))
p <- myplot(r,i)
print(p)
l[[i]] <- p
}
}
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from DIAMONDS group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i = i),verbose = TRUE)))
r
categoricals[[1]]
names(ddf)
categoricals <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select * from diamonds"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Diamonds', PASS='orcl', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))
categoricals[[1]]
ddf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from DIAMONDS"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON'),verbose = TRUE)));
names(ddf)
l <- list()
for (i in names(ddf)) {
if (i %in% categoricals[[1]]) {
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from DIAMONDS group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i=i),verbose = TRUE)))
p <- myplot(r,i)
print(p)
l[[i]] <- p
}
}
source('~/.active-rstudio-document')
categoricals[[1]]
names(ddf)
l <- list()
for (i in names(ddf)) {
if (i %in% categoricals[[1]]) {
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from age_grouping group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL',USER='C##cs329e_hhz76',PASS='orcl_hhz76',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i = i),verbose = TRUE)))
p <- myplot(r,i)
print(p)
l[[i]] <- p
}
}
l <- list()
for (i in names(ddf)) {
if (i %in% categoricals[[1]]) {
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from age_grouping group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL',USER='C##cs329e_hhz76',PASS='orcl_hhz76',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i = i),verbose = TRUE)))
p <- myplot(r,i)
print(p)
l[[i]] <- p
}
}
categoricals
source('~/.active-rstudio-document')
categoricals
png("/03 Visualizations/categorical.png", width = 25, height = 10, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:4))
print(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 5:8))
print(l[[3]], vp = viewport(layout.pos.row = 1, layout.pos.col = 9:12))
dev.off()
png("/03 Visualizations/categorical.png", width = 25, height = 10, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:4))
print(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 5:8))
dev.off()
l
png("/03 Visualizations/categorical.png", width = 25, height = 10, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 2)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
dev.off()
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 2)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
dev.off()
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 2)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
dev.off()
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:4))
print(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 5:8))
print(l[[3]], vp = viewport(layout.pos.row = 1, layout.pos.col = 9:12))
dev.off()
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:4))
print(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 5:8))
dev.off()
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:4))
dev.off()
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 12)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1:1))
dev.off()
l <- list()
for (i in names(ddf)) {
if (i %in% categoricals[[1]]) {
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from age_grouping group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL',USER='C##cs329e_hhz76',PASS='orcl_hhz76',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i = i),verbose = TRUE)))
p <- myplot(r,i)
print(p)
l[[i]] <- p
}
}
l
categoricals[[1]]
ddf
names(ddf)
source('~/.active-rstudio-document')
l
names(ddf)
categoricals[[1]]
source('~/.active-rstudio-document')
png("/03 Visualizations/categorical.png", width = 25, height = 10, units = "in", res = 72)
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 2)))
print(l[[1]], vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(l[[2]], vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
dev.off()
png("/Users/pcannata/Mine/UT/GitRepositories/DataVisualization/RWorkshop/00 Doc/categoricals3.png", width = 25, height = 10, units = "in", res = 72)
require("tidyr")
require("dplyr")
require("jsonlite")
png("/Users/pcannata/Mine/UT/GitRepositories/DataVisualization/RWorkshop/00 Doc/categoricals3.png", width = 25, height = 10, units = "in", res = 72)
png("/Users/pcannata/Mine/UT/GitRepositories/DataVisualization/RWorkshop/00 Doc/categoricals.png", width = 25, height = 10, units = "in", res = 72)
source('~/DataVisualization/DrCannata/RWorkshop/10 ListsForIfFunctionsPng/ListsForIfFunctionsPng.R')
categoricals[[1]]
names(ddf)
categoricals <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select year,zip_code, predominant_age_group, count, city from age_grouping"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL', USER='C##cs329e_hhz76', PASS='orcl_hhz76', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))
ddf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select year,zip_code, predominant_age_group, count, city from age_grouping"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL',USER='C##cs329e_hhz76',PASS='orcl_hhz76',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON'),verbose = TRUE)));
l <- list()
for (i in names(ddf)) {
if (i %in% categoricals[[1]]) {
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from age_grouping group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521:ORCL',USER='C##cs329e_hhz76',PASS='orcl_hhz76',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i = i),verbose = TRUE)))
p <- myplot(r,i)
print(p)
l[[i]] <- p
}
}
names(dff)
names(ddf)
q='Good'
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from diamonds where \\\"cut\\\" = \\\'"q"\\\'"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', q=q),verbose = TRUE)))
myplot <- function(df, x) {
names(df) <- c("x", "n")
ggplot(df, aes(x=x, y=n)) + geom_point()
}
categoricals <- eval(parse(text=substring(getURL(URLencode('http://129.152.144.84:5001/rest/native/?query="select * from diamonds"'), httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal', USER='DV_Diamonds', PASS='orcl', MODE='native_mode', MODEL='model', returnFor = 'R', returnDimensions = 'True'), verbose = TRUE), 1, 2^31-1)))
ddf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from DIAMONDS"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON'),verbose = TRUE)));
l <- list()
for (i in names(ddf)) {
if (i %in% categoricals[[1]]) {
r <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select \\\""i"\\\", count(*) n from DIAMONDS group by \\\""i"\\\" "'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDB1.usuniversi01134.oraclecloud.internal',USER='DV_Diamonds',PASS='orcl',MODE='native_mode',MODEL='model',returnDimensions = 'False',returnFor = 'JSON', i=i),verbose = TRUE)))
p <- myplot(r,i)
print(p)
l[[i]] <- p
}
}
names(ddf)
l
p
names(ddf)
myplot <- function(df, x) {
names(df) <- c("x", "n")
ggplot(df, aes(x=x, y=n)) + geom_point()
}
myplot
